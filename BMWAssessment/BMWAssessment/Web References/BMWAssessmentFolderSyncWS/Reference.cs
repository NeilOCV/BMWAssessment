//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BMWAssessment.BMWAssessmentFolderSyncWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SyncSoap", Namespace="http://tempuri.org/")]
    public partial class Sync : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetUpFolderSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllThreadsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Sync() {
            this.Url = global::BMWAssessment.Properties.Settings.Default.BMWAssessment_BMWAssessmentFolderSyncWS_Sync;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetUpFolderSyncCompletedEventHandler SetUpFolderSyncCompleted;
        
        /// <remarks/>
        public event GetProgressCompletedEventHandler GetProgressCompleted;
        
        /// <remarks/>
        public event GetAllThreadsCompletedEventHandler GetAllThreadsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetUpFolderSync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetUpFolderSync(string strSourceFolder, string strDestinationFolder) {
            object[] results = this.Invoke("SetUpFolderSync", new object[] {
                        strSourceFolder,
                        strDestinationFolder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetUpFolderSyncAsync(string strSourceFolder, string strDestinationFolder) {
            this.SetUpFolderSyncAsync(strSourceFolder, strDestinationFolder, null);
        }
        
        /// <remarks/>
        public void SetUpFolderSyncAsync(string strSourceFolder, string strDestinationFolder, object userState) {
            if ((this.SetUpFolderSyncOperationCompleted == null)) {
                this.SetUpFolderSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUpFolderSyncOperationCompleted);
            }
            this.InvokeAsync("SetUpFolderSync", new object[] {
                        strSourceFolder,
                        strDestinationFolder}, this.SetUpFolderSyncOperationCompleted, userState);
        }
        
        private void OnSetUpFolderSyncOperationCompleted(object arg) {
            if ((this.SetUpFolderSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUpFolderSyncCompleted(this, new SetUpFolderSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Progress GetProgress(string id) {
            object[] results = this.Invoke("GetProgress", new object[] {
                        id});
            return ((Progress)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgressAsync(string id) {
            this.GetProgressAsync(id, null);
        }
        
        /// <remarks/>
        public void GetProgressAsync(string id, object userState) {
            if ((this.GetProgressOperationCompleted == null)) {
                this.GetProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgressOperationCompleted);
            }
            this.InvokeAsync("GetProgress", new object[] {
                        id}, this.GetProgressOperationCompleted, userState);
        }
        
        private void OnGetProgressOperationCompleted(object arg) {
            if ((this.GetProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgressCompleted(this, new GetProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllThreads", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FolderSync[] GetAllThreads() {
            object[] results = this.Invoke("GetAllThreads", new object[0]);
            return ((FolderSync[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllThreadsAsync() {
            this.GetAllThreadsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllThreadsAsync(object userState) {
            if ((this.GetAllThreadsOperationCompleted == null)) {
                this.GetAllThreadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllThreadsOperationCompleted);
            }
            this.InvokeAsync("GetAllThreads", new object[0], this.GetAllThreadsOperationCompleted, userState);
        }
        
        private void OnGetAllThreadsOperationCompleted(object arg) {
            if ((this.GetAllThreadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllThreadsCompleted(this, new GetAllThreadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Progress {
        
        private long totalNumberOfFilesToCopyField;
        
        private long filesCopiedSoFarField;
        
        /// <remarks/>
        public long TotalNumberOfFilesToCopy {
            get {
                return this.totalNumberOfFilesToCopyField;
            }
            set {
                this.totalNumberOfFilesToCopyField = value;
            }
        }
        
        /// <remarks/>
        public long FilesCopiedSoFar {
            get {
                return this.filesCopiedSoFarField;
            }
            set {
                this.filesCopiedSoFarField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FolderSync {
        
        private string sourceFolderField;
        
        private string destinationFolderField;
        
        private string idField;
        
        /// <remarks/>
        public string SourceFolder {
            get {
                return this.sourceFolderField;
            }
            set {
                this.sourceFolderField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationFolder {
            get {
                return this.destinationFolderField;
            }
            set {
                this.destinationFolderField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SetUpFolderSyncCompletedEventHandler(object sender, SetUpFolderSyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUpFolderSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUpFolderSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetProgressCompletedEventHandler(object sender, GetProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Progress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Progress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAllThreadsCompletedEventHandler(object sender, GetAllThreadsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllThreadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllThreadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderSync[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderSync[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591